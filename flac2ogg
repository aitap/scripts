#!/bin/bash

[ -z "$SUBRUN" ] && cat << WELCOME
flac2ogg script by AITap, 2009
Published under GPLv3 or later
WELCOME

function die () {
    echo -e '\033[1;31m'"$*"'\033[0m'
    exit 1
}

function usage () {
cat << USAGE
Usage: $(basename $0) [ -s ] <file1.flac> ... [filen.flac]
Encode selected FLAC files to OGG.
Use -s to suspend all external programs output.
You may also set \$OGGENC variable, for example:
OGGENC=-q10 flac2ogg somefile.flac
USAGE
exit 1
}

[ -z "$*" ] && usage
[ "$DEBUG" ] && set -x
[ -z "$OGGENC" ] && OGGENC=-q5

if [ -z "$SUBRUN" ] 
then
	if [ "$1" == "-s" ]
	then
		out=/dev/null
		echo -e '\033[1m>> Working in silent mode\033[0m'
		shift
	else
		out=/dev/stderr
	fi
	
	for prog in flac oggenc lltag file
	do
		echo -en '\033[1m>> Checking for '$prog': \033[0m'
		which $prog || die "not found!"
	done
fi

i=0
for file
do
	i=$(($i+1))
	file="$(readlink -f "${file}")" || die ">> Couldn't read filepath!"
	if [ -d "$file" ]
	then
		echo -e "\033[1m>> ${SUBRUN}(${i}/${#}) '${file}' is a directory, transcoding contents into subdir\033[0m"
		localdir="$(sed s/flac/OGG/gi <<<$(basename "${file}"))"
		mkdir "$localdir" || die "mkdir failed!"
		cd "$localdir"
		SUBRUN="${SUBRUN}(${i}/${#}) " out=$out $0 "$file"/* || die "Subprocess died"
		cd ..
	elif [ -r "$file" ]
	then
		echo -e "\033[1m>> ${SUBRUN}(${i}/${#}) Doing '${file}':\033[0m"
		if file -b "$file" | grep -vq FLAC
		then
			echo -e "\033[1m>>  Is not a FLAC!\033[0m"
			continue
		fi
		localfile=$(basename "$file" .flac)
		
		echo -e '\033[1m>>  Getting tags...\033[0m'
		title=$(lltag -S "$file" | egrep -i '^ *TITLE=' | sed 's/.*=//')
		album=$(lltag -S "$file" | egrep -i '^ *ALBUM=' | sed 's/.*=//')
		artist=$(lltag -S "$file" | egrep -i '^ *ARTIST=' | sed 's/.*=//')
		
		echo -e '\033[1m>>  Recoding...\033[0m'
		oggenc $OGGENC -a "$artist" -t "$title" -l "$album" -o "${localfile}.ogg" "${file}" &> $out || die ">>  Recoding ${localfile}.wav failed!"
	else
		die ">> You shouldn't have seen this. Forget it."
	fi
done
exit 0
